// Rest Client VSCode Add-in. See https://marketplace.visualstudio.com/itemMaster?itemName=humao.rest-client

@baseUrl="http://localhost:3000"
@refreshToken = {{login.response.body.token.refreshToken}}
@accessToken = {{login.response.body.token.accessToken}}

###
// Test Users
GET http://localhost:3000/user/test
Content-Type: application/json
//Authorization: Bearer {{accessToken}}
 
###
GET http://localhost:3000/brand/test

###

// Test Brands
GET http://localhost:3000/brand/test
Content-Type: application/json
//Authorization: Bearer {{accessToken}}

###
// *************************** LOGIN and TOKENS *******************
// Login
# @name login
POST http://localhost:3000/user/login
Content-Type: application/json

{
    "email": "dgarvin57@gmail.com",
    "password": "dg109596"
}

###

// Logout
POST http://localhost:3000/user/logout
Authorization: Bearer {{accessToken}}

###
// Encrypt password
POST http://localhost:3000/user/encrypt-password
Content-Type: application/json

{
    "password": "dg1095"
}

###
// Change password
POST http://localhost:3000/user/change-password
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "email": "dgarvin57@gmai.com",
    "currentPassword": "dg1095",
    "newPassword": ""
}

###

// See a list of all refresh tokens
GET http://localhost:3000/token/
Authorization: Bearer {{accessToken}}

###
// Refresh token
# @name refresh
POST http://localhost:3000/token/refresh
Authorization: Bearer {{refreshToken}}
Content-Type: application/json

{
    "token": "{{refreshToken}}"
}

//@accessToken = {{refresh.response.body.token.accessToken}}

###

// Delete expired token
DELETE http://localhost:3000/token/pruneZzi39
Authorization: Bearer {{accessToken}}

###

// *************************** ROLES *******************
// Get all role
GET http://localhost:3000/role
Authorization: Bearer {{accessToken}}

###

// *************************** RESOURCES *******************
// Get all resource
GET http://localhost:3000/resource
Authorization: Bearer {{accessToken}}

###

// *************************** ROLE-RESOURCES *******************
// Get all role-resource
GET http://localhost:3000/roleResources
Authorization: Bearer {{accessToken}}

###

// *************************** USER-ROLES *******************
// Get all user-role
GET http://localhost:3000/userRole
Authorization: Bearer {{accessToken}}

###

// *************************** RESTRICTED *******************
// Get all amazon restricted (unauthenticated route)
GET http://localhost:3000/restricted
Authorization: Bearer {{accessToken}}

###
// Get unique list of active brands
GET http://localhost:3000/restricted/brands

###
// Get unique list of restricted reason
GET http://localhost:3000/restricted/reasons

###
GET http://localhost:3000/restricted?limit=50&page=1&orderBy=ts&orderDir=desc

###
GET http://localhost:3000/restricted/find?searchText=019&limit=50&page=1&orderBy=itemNumber&orderDir=desc&filter=enabled=true

###
GET http://localhost:3000/restricted/find?searchText=43&limit=50&page=1&orderBy=itemNumber&orderDir=desc&filter=enabled=true%20and%20brand_name=%27adidas%27

###
GET http://localhost:3000/restricted/find?limit=50&page=1&orderBy=ts&orderDir=desc&filter=enabled=true%20AND%20itemNumber%20LIKE%20%27%2535%25%27

###
// filter test1
GET http://localhost:3000/restricted/find?limit=50&page=1&orderBy=ts&orderDir=desc&filter=enabled=true%20AND%20`brandName`%20LIKE%20%27%25Asics%25%27

###
// filter test 2
GET http://localhost:3000/restricted/find?limit=50&page=1&orderBy=ts&orderDir=desc&filter=enabled=true%20AND%20%60itemNumber%60%20LIKE%20%27%2510%25%27%20AND%20%60brandName%60%20LIKE%20%27%25Adidas%25%27

###
// Create restricted test
POST http://localhost:3000/restricted
Content-Type: application/json

{
    "brandName": "test123",
    "enabled": true,
    "itemNumber": "test123",
    "notes": "test123",
    "productDescription": "test123",
    "restrictedReason": "test123"
}

####
// Create BRAND (few fields with error)
POST http://localhost:3000/brand
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "brandName": "Dan3",
    "abbreviation": "dg3",
    "description": "dg3",
    "active": true,
    "vendorName": "Test Dan3",
    "note": null
 }

###
// Get all amazon restricted - enabled
GET http://localhost:3000/restricted/enabled
Authorization: Bearer {{accessToken}}

###
// Get all amazon restricted - disabled
GET http://localhost:3000/restricted/disabled
Authorization: Bearer {{accessToken}}


###

// *************************** USERS *******************
// Get all user
GET http://localhost:3000/user
Authorization: Bearer {{accessToken}}

###
// Find user
GET http://localhost:3000/user/find?searchText=connie
Authorization: Bearer {{accessToken}}

###
// Find one user by id
GET http://localhost:3000/user/21
Authorization: Bearer {{accessToken}}

###
// Delete one user by id
DELETE http://localhost:3000/user/21
Authorization: Bearer {{accessToken}}

###
// Create user
POST http://localhost:3000/user
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "username": "connie25@gmail.com",
    "password": "dg1083s"
}

###
// Update user
PUT http://localhost:3000/user/19
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "password": "dg10100"
}

###
// *************************** ITEMS *******************
// Get all itemMaster items
GET http://localhost:3000/itemMaster?limit=50&page=1&orderBy=size&orderDir=DESC
Authorization: Bearer {{accessToken}}

###
// Find (search) items
GET http://localhost:3000/itemMaster/find?searchText=ADI_aaTest2
Authorization: Bearer {{accessToken}}

#####
// Get 1 item
GET http://localhost:3000/itemMaster/102988
Authorization: Bearer {{accessToken}}

####
// Update record
PUT http://localhost:3000/itemMaster/102988
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{    
    "productTitle": "Adidas Mens TF BASE LS T-Shirt/Long Sleeve - WHITE - 3XL bbb"
}

#####
// Delete
DELETE http://localhost:3000/itemMaster/102988
Authorization: Bearer {{accessToken}}

#####
// Create item
POST http://localhost:3000/itemMaster
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "itemNumber": "ADI_aaTest3",
    "mfgItemNumber": "ADI_aaTest3",
    "brandName": "Adidas",
    "productTitle": "Adidas Mens TF BASE LS T-Shirt/Long Sleeve - WHITE - 3XL",
    "productType": "Apparel",
    "styleCode": "test",
    "colorCode": "WHITE",
    "color": "WHITE",
    "size": "L",
    "upc": "test3426679y",
    "alternateUpc": null,
    "cost": "13.20",
    "msrp": "30.00",
    "note": "Test item master record",
    "logItemNumbers": "ADI_aaTest2",
    "amazonSku": "TEST-SKU2",
    "amazonAsin": "TEST-ASIN",
    "pastSkus": null,
    "amazonFnsku": "X001NS3NYJ",
    "ebaySku": null
}

###
// *************************** BRANDS *******************
// Get all BRANDs (unauthenticated)
GET http://localhost:3000/brand?limit=50&page=1&orderBy=brandName&orderDir=ASC
Authorization: Bearer {{accessToken}}

###
// Get filtered BRANDs (unauthenticated)
GET http://localhost:3000/brand/find?limit=25&page=1&orderBy=brandName&orderDir=ASC&filter=active=true
Authorization: Bearer {{accessToken}}

###
// Find (search) BRAND
GET http://localhost:3000/brand/find?searchText=zdefsdfd
Authorization: Bearer {{accessToken}}

###
// Find (search and filter) BRAND
GET http://localhost:3000/brand/find?searchText=a&filter=brandName LIKE '%'
Authorization: Bearer {{accessToken}}

#####
// Get 1 BRAND
GET http://localhost:3000/brand/41
Authorization: Bearer {{accessToken}}

####
// Update BRAND
PUT http://localhost:3000/brand/16684
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "brandName": "zTest Brand",
    "abbreviation": "ZZZ",
    "description": null,
    "active": false,
    "vendorName": "Test Vendor zzz",
    "distributor": null,
    "discount": null,
    "initialEvaluationDate": "2018-02-20T06:00:00.000Z",
    "uploadedInitialData": false,
    "note": null,
    "soldOnAmazon": true,
    "restricted": "No",
    "restrictedNotes": null,
    "restrictedConfirmedByAmazon": null,
    "priority": 1,
    "status": "Pursue",
    "sourceOfLead": null,
    "amazonListingsCount": 810,
    "categories": "Footwear",
    "evaluationNotes": "1 possible",
    "haveUpcs": null,
    "doAmazonScan": true,
    "amazonScanDate": "2018-02-19T06:00:00.000Z",
    "amazonScanItems": 822,
    "goodBuyItems": 105,
    "variations": 4662,
    "replenishing": null,
    "pursue": true
 }

####
// Update BRAND (few fields)
PUT http://localhost:3000/brand/16684
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "brandName": "zTest Brand",
    "abbreviation": "ZZZ",
    "description": null,
    "active": false,
    "vendorName": "Test Vendor zzz",
    "note": null
 }

####
// Create BRAND (few fields with error)
POST http://localhost:3000/brand
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "brandName": "Dan3",
    "abbreviation": "dg3",
    "description": "dg3",
    "active": true,
    "vendorName": "Test Dan3",
    "note": null
 }

####
// Create BRAND (few fields with error)
POST http://localhost:3000/brand
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "brandName": "new test998",
    "abbreviation": "TB9",
    "description": "test",
    "active": true,
    "vendorName": "Test",
    "note": null
 }

####
// Update BRAND (test update brand name)
PUT http://localhost:3000/brand/17554
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "id": 17554,
    "brandName": "new test999",
    "abbreviation": "TB9",
    "description": "test asdflkadsfad",
    "active": true,
    "vendorName": "test dg1 brand",
    "note": null
 }

#####
// Delete
DELETE http://localhost:3000/brand/16684
Authorization: Bearer {{accessToken}}

#####
// Create brand
POST http://localhost:3000/brand
Authorization: Bearer {{accessToken}}
Content-Type: application/json

{
    "brandName": "zTest Brand",
    "abbreviation": "ZZZ",
    "description": null,
    "active": false,
    "vendorName": "Test Vendor",
    "distributor": null,
    "discount": null,
    "initialEvaluationDate": "2018-02-20T06:00:00.000Z",
    "uploadedInitialData": false,
    "note": null,
    "soldOnAmazon": true,
    "restricted": "No",
    "restrictedNotes": null,
    "restrictedConfirmedByAmazon": null,
    "priority": 1,
    "status": "Pursue",
    "sourceOfLead": null,
    "amazonListingsCount": 810,
    "categories": "Footwear",
    "evaluationNotes": "1 possible",
    "haveUpcs": null,
    "doAmazonScan": true,
    "amazonScanDate": "2018-02-19T06:00:00.000Z",
    "amazonScanItems": 822,
    "goodBuyItems": 105,
    "variations": 4662,
    "replenishing": null,
    "pursue": true
}

###
// Get informed download link for repricing routine
GET https://api.informed.co/v1/export/downloadlink/41c10486-9296-4948-83f9-7d95496ecfd7
accept: application/json
x-api-key: JOS0Jz5cALa3VURh180xowIoKCnlMRb2yH5X1njs

